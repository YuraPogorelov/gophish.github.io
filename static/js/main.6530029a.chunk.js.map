{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","App","classes","useState","campaigns","setCampaigns","React","page","setPage","rowsPerPage","setRowsPerPage","useEffect","getCampaign","a","fetch","response","json","data","className","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","camp","key","id","scope","name","created_date","results","length","Button","variant","color","status","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAeMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAkFCC,EA9EH,WACV,IAAMC,EAAUL,IADA,EAMkBM,mBAAS,IAN3B,mBAMTC,EANS,KAMEC,EANF,OAOQC,IAAMH,SAAS,GAPvB,mBAOTI,EAPS,KAOHC,EAPG,OAQsBF,IAAMH,SAAS,GARrC,mBAQTM,EARS,KAQIC,EARJ,KAUhBC,qBAAU,WACRC,OAGF,IAAMA,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,mDAAD,OAX5B,qEAUkB,cACZC,EADY,gBAICA,EAASC,OAJV,OAIZC,EAJY,OAKlBZ,EAAaY,GALK,2CAAH,qDAiBjB,OACE,yBAAKC,UAAU,OACb,qHACA,6BACE,kBAACC,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACC,EAAA,EAAD,CAAOJ,UAAWhB,EAAQH,MAAOwB,aAAW,gBAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,0GACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,6EACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,4EACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,0CAIJ,kBAACC,EAAA,EAAD,KACGxB,EAAUyB,KAAI,SAACC,GAAD,OACb,kBAACL,EAAA,EAAD,CAAUM,IAAKD,EAAKE,IAClB,kBAACN,EAAA,EAAD,CAAWN,UAAU,KAAKa,MAAM,OAC7BH,EAAKI,MAER,kBAACR,EAAA,EAAD,CAAWC,MAAM,UAAUG,EAAKK,cAChC,kBAACT,EAAA,EAAD,CAAWC,MAAM,UAAUG,EAAKM,QAAQC,QACxC,kBAACX,EAAA,EAAD,CAAWC,MAAM,UACf,kBAACW,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,WAC9BV,EAAKW,gBAQpB,kBAACC,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BvB,UAAU,MACVwB,MAAOxC,EAAUiC,OACjB5B,YAAaA,EACbF,KAAMA,EACNsC,aAhDiB,SAACC,EAAOC,GAC/BvC,EAAQuC,IAgDFC,oBA7CwB,SAACF,GAC/BpC,EAAeuC,SAASH,EAAMI,OAAOC,MAAO,KAC5C3C,EAAQ,SC5CZ4C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6530029a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n//import Campaigns from './Campaigns';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 600,\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  const API_KEY =\r\n    'd978956e7a866d2b0816575052fbea8ffc4bfc14cdc57a53c09a185609ef6bd9';\r\n\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  useEffect(() => {\r\n    getCampaign();\r\n  });\r\n\r\n  const getCampaign = async () => {\r\n    const response = await fetch(\r\n      `http://161.35.16.211:323/api/campaigns/?api_key=${API_KEY}`\r\n    );\r\n    const data = await response.json();\r\n    setCampaigns(data);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>Список компаний</h1>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label='simple table'>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Название компании</TableCell>\r\n                <TableCell align='center'>Дата создания</TableCell>\r\n                <TableCell align='center'>Пользователи</TableCell>\r\n                <TableCell align='center'>Статус</TableCell>\r\n                {/* <TableCell align='center'>Action</TableCell> */}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {campaigns.map((camp) => (\r\n                <TableRow key={camp.id}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {camp.name}\r\n                  </TableCell>\r\n                  <TableCell align='center'>{camp.created_date}</TableCell>\r\n                  <TableCell align='center'>{camp.results.length}</TableCell>\r\n                  <TableCell align='center'>\r\n                    <Button variant='outlined' color='primary'>\r\n                      {camp.status}\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component='div'\r\n          count={campaigns.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}